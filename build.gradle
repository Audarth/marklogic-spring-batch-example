/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE")
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

apply plugin: 'org.springframework.boot'

apply plugin: 'idea'
idea.module.downloadJavadoc = true

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.marklogic:marklogic-spring-batch-core:1.5.0'
    compile 'com.marklogic:spring-batch-file:1.5.0'

    compile group: 'org.apache.avro', name: 'avro', version: '1.8.2'
    testCompile 'com.marklogic:marklogic-spring-batch-test:1.5.0'
    testCompile "com.marklogic:ml-junit:3.1.0"
}

// Define the main class for the application
mainClassName = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'

task runYourJob(type: JavaExec) {
    main = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'
    classpath = sourceSets.test.runtimeClasspath
    args = ["--job_path", "YourJobConfig",
            "--job_id", "yourJob",
            "--output_collections", "yourJob",
            "--chunk_size", "50",
            "--thread_count", "1",
            "--next"]
}



task runMyDirectoryJob(type: JavaExec) {
    main = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'
    classpath = sourceSets.test.runtimeClasspath
    args = ["--job_path", "MyImportDocsExtractTextJob",
            "--job_id", "mydirectoryJob",
            "--input_file_path", "sampleInput/",
            "--input_file_pattern", "\".*\"",
            "--thread_count", "1",
            "--next"]
}

task runAvroJob(type: JavaExec) {
    main = 'com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner'
    classpath = sourceSets.test.runtimeClasspath
    args = ["--job_path", "AvroImportJob",
            "--job_id", "myAvroJob",
            "--input_file", "sampleAvroInput/sampleAvroSerialized.avro",
            "--thread_count", "1",
            "--next"]
}